%
% Name
%   mms_edi_ql_efield_write
%
% Purpose
%   Create a MATLAB save file of inputs needed for Bestarg.
%
% Calling Sequence
%   EDI_QL_FILE = mms_edi_ql_efield_write(EDI_QL)
%     Write EDI quick-look data constained in the structure EDI_QL
%     and created by mms_edi_create_ql_efield.m to a CDF file named
%     EDI_QL_FILE.
%
% Parameters
%   EDI_QL:         in, required, type=string
%
% Returns
%   EDI_QL_FILE     out, required, type=string
%
% MATLAB release(s) MATLAB 7.14.0.739 (R2012a)
% Required Products None
%
% History:
%   2015-09-11      Written by Matthew Argall
%
function edi_ql_file = mms_edi_ql_efield_write(meta, ql_data)
%------------------------------------%
% Create CDF File                    %
%------------------------------------%
	% Extract for ease of use
	sc      = meta.sc;
	instr   = meta.instr;
	mode    = meta.mode;
	level   = 'ql';
	optdesc = meta.optdesc;
	tstart  = meta.tstart;

	%
	% Check sizes
	%
	assert( isa(ql_data.tt2000,    'int64'),  'ql_data.tt2000 should be int64.' );
	assert( isa(ql_data.E,         'single'), 'ql_data.E should be single.');
	assert( isa(ql_data.v_ExB,     'single'), 'ql_data.v_ExB should be single.');
	assert( isa(ql_data.E_bc,      'single'), 'ql_data.E_bc should be single.');
	assert( isa(ql_data.v_ExB_bc,  'single'), 'ql_data.v_ExB_bc should be single.');
	assert( isa(ql_data.quality_bc,'uint8'),  'ql_data.quality_bc should be uint8.');

	% convert the start time to yyyy-mm-dd
	tstart = MrTimeParser(tstart, '%Y-%M-%dT%H:%m:%S', '%Y%M%d');
	                                  
	% Describe the modifications to each version
	mods    = {  'v0.0.0 -- First version.', ...
	             'v0.0.1 -- Added gun positions.', ...
	             'v0.0.2 -- Include points with beams from single gun.', ...
	             'v0.1.0 -- Add weighting factor to beam convergence.', ...
	            ['v0.1.1 -- Added delta_plus and delta_minus variables. ' ...
	                        '0-based indices. Drift step has correct units.'], ...
	            ['v0.1.2 -- Added "recnum" variables.'], ...
	            ['v0.1.3 -- Update calculations of delta_d, v_ExB, and E.'], ...
	            ['v0.1.4 -- Corrected sign of E. Added quality. ' ... 
	                        'VAR_TYPE and "Generated_by" attributes fixed.'], ...
	            ['v0.1.5 -- v_ExB given in km/s instead of m/s. ' ...
	                        'Combine slow & fast survey. ' ...
	                        'Metadata ok by SKTEditor.'], ...
	             'v0.2.0 -- Incorporate cost function (bestarg) method.' ...
	             'v0.2.1 -- Stream lined BC and CF methods to work in tandem.' ...
	             'v0.2.2 -- Fast survey included. Unit conversion correction.' ...
	             'v0.2.3 -- Added times of flight.' ...
	             'v0.2.4 -- Updated to work with l1a v0.9.0+ files.' ...
	             'v0.3.0 -- Data is now "quick", with non-science variables removed.' ...
	          };
	version = regexp( mods{end}, '^v[0-9]+\.[0-9]+\.[0-9]+', 'match' );

	% Create the output filename
	edi_ql_file = mms_construct_filename(sc, instr, mode, level,      ...
	                                     'Directory', meta.directory, ...
	                                     'OptDesc',   optdesc,        ...
	                                     'TStart',    tstart,         ...
	                                     'Version',   version);

%------------------------------------------------------
% Global Attributes                                   |
%------------------------------------------------------
	if isempty(optdesc)
		data_type      = [mode '_' level];
		logical_source = [instr '_' mode '_' level];
	else
		data_type      = [mode '_' level '_' optdesc];
		logical_source = [instr '_' mode '_' level '_' optdesc];
	end
	[~, logical_file_id, ext] = fileparts(edi_ql_file);
	source_name = ['MMS' sc(4) '>MMS Satellite Number ' sc(4)];

	%   - Instrument Type (1+)
	%           Electric Fields (space)
	%           Magnetic Fields (space)
	%           Particles (space)
	%           Plasma and Solar Wind
	%           Spacecraft Potential Control
	global_attrs = struct( 'Data_type',                  data_type, ...
	                       'Data_version',               version, ...
	                       'Descriptor',                 'EDI', ...
	                       'Discipline',                 'Space Physics>Magnetospheric Science', ...
	                       'File_naming_convention',     'source_descriptor_datatype_yyyyMMdd', ...
	                       'Generation_date',            datestr(now(), 'yyyymmdd'), ...
	                       'Instrument_type',            'Magnetic Fields (space)', ...
	                       'Logical_file_id',            logical_file_id, ...
	                       'Logical_source',             logical_source, ...
	                       'Logical_source_description', 'Quick-look EDI E-Field data', ...
	                       'Mission_group',              'MMS', ...
	                       'PI_affiliation',             'SWRI, UNH', ...
	                       'PI_name',                    'J. Burch, R. Torbert', ...
	                       'Project',                    'STP>Solar Terrestrial Physics', ...
	                       'Source_name',                source_name, ...
	                       'TEXT',                       ['EDI electric field data. ' ...
	                                                      'Instrument papers for EDI can be found at: ' ...
	                                                      'http://link.springer.com/article/10.1007%2Fs11214-015-0182-7'], ...
	                       'HTTP_LINK',                  { {'http://mms-fields.unh.edu/' ...
	                                                        'http://mms.gsfc.nasa.gov/index.html'} }, ...
	                       'LINK_TEXT',                  { {'UNH FIELDS Home Page', ...
	                                                        'NASA MMS Home'} }, ...
	                       'MODS',                       { mods }, ...
	                       'Acknowledgements',           ' ', ...
	                       'Generated_by',               'UNH', ...
	                       'Parents',                    { meta.parents }, ...
	                       'Skeleton_version',           ' ', ...
	                       'Rules_of_use',               ' ', ...
	                       'Time_resolution',            ' '  ...
	                     );

%------------------------------------------------------
% Variables                                           |
%------------------------------------------------------
	% Variable naming convention
	%   scId_instrumentId_paramName_optionalDescriptor
	
	% Cost Function Results
	tt2000_vname  = 'Epoch';
	dtt2000_vname = 'Epoch_delta_plus';
	e_cf_vname    = mms_construct_varname(sc, instr, 'E', 'dmpa');
	v_cf_vname    = mms_construct_varname(sc, instr, 'v', 'ExB_dmpa');
	d_cf_vname    = mms_construct_varname(sc, instr, 'd', 'dmpa');
	
	% Beam Convergence Results
	e_bc_vname     = mms_construct_varname(sc, instr, 'E',       'bc_dmpa'     );
	v_bc_vname     = mms_construct_varname(sc, instr, 'v',       'ExB_bc_dmpa' );
	q_bc_vname     = mms_construct_varname(sc, instr, 'quality', 'bc'          );
	
	% Axis labels
	e_labl_vname     = 'E_Labl_Ptr';
	v_labl_vname     = 'v_Labl_Ptr';

	% Variable Data
	var_list = { tt2000_vname,       ql_data.tt2000',     ...
	             dtt2000_vname,      ql_data.dt_avg,      ...
	             e_cf_vname,         ql_data.E',          ...
	             v_cf_vname,         ql_data.v_ExB',      ...
	             e_bc_vname,         ql_data.E_bc',       ...
	             v_bc_vname,         ql_data.v_ExB_bc',   ...
	             q_bc_vname,         ql_data.quality_bc', ...
	             e_labl_vname,       { 'Ex'  'Ey'  'Ez'}, ...
	             v_labl_vname,       { 'vx'  'vy'  'vz'}  ...
	           };

	% Record Variance
	recbound = { tt2000_vname, ...
	             e_cf_vname,   ...
	             v_cf_vname,   ...
	             e_bc_vname,   ...
	             v_bc_vname,   ...
	             q_bc_vname    ...
	           };

	% Data types
	vardatatypes = { tt2000_vname,       'cdf_time_tt2000', ...
	                 dtt2000_vname,      'cdf_time_tt2000', ...
	                 e_cf_vname,         'cdf_float',       ...
	                 v_cf_vname,         'cdf_float',       ...
	                 e_bc_vname,         'cdf_float',       ...
	                 v_bc_vname,         'cdf_float',       ...
	                 q_bc_vname,         'cdf_uint1'        ...
	               };
	

%------------------------------------------------------
% Variable Attributes                                 |
%------------------------------------------------------
	%
	% This assignment fails because the cell arrays do not have the same
	% number of elements. Adding variable attributes will have to be done
	% with cdflib.
	%
	var_attrs = struct( ...
		'CATDESC',     { ...
		                  { tt2000_vname,  'TT2000 time tags for EDI electric field data.', ...
		                    dtt2000_vname, 'Upper bound for the time stamps.', ...
		                    e_cf_vname,    ['Electric field computed via the "bestarg" method. ' ...
		                                    'It is derived from the drift step, vector magnetic '...
		                                    'field, and gyroperiod.'], ...
		                    v_cf_vname,    ['ExB drift velocity computed via the "bestarg" method. ' ...
		                                    'It is derived the drift step and gyroperiods.'], ...
		                    e_bc_vname,    ['Electric field computed via the "beam convergence" method. ' ...
		                                    'It is derived from the drift step, vector magnetic '...
		                                    'field, and gyroperiod.'], ...
		                    v_bc_vname,    ['ExB drift velocity computed via the "beam convergence" method. ' ...
		                                    'It is derived the drift step and gyroperiods.'], ...
		                    q_bc_vname,     'Quality flag for beam convergence data.', ...
		                    e_labl_vname,   'Axis labels for electric field', ...
		                    v_labl_vname,   'Axis labels for drift velocity'  ...
		                  } ...
		                }, ...
		'DEPEND_0',    {  ...
		                  { e_cf_vname,        tt2000_vname, ...
		                    v_cf_vname,        tt2000_vname, ...
		                    e_bc_vname,        tt2000_vname, ...
		                    v_bc_vname,        tt2000_vname, ...
		                    q_bc_vname,        tt2000_vname  ...
		                  } ...
		               }, ...
		'DELTA_PLUS_VAR', {  ...
		                  { tt2000_vname, dtt2000_vname   ...
		                  } ...
		               }, ...
		'DISPLAY_TYPE',{  ... 
		                  { e_cf_vname,     'time_series', ...
		                    v_cf_vname,     'time_series', ...
		                    e_bc_vname,     'time_series', ...
		                    v_bc_vname,     'time_series'  ...
		                  } ...
		               }, ...
		 'FIELDNAM',      {  ...
		                    { tt2000_vname,      'Time',               ...
		                      dtt2000_vname,     'dt',                 ...
		                      e_cf_vname,        'Electric Field',     ...
		                      v_cf_vname,        'ExB Drift Velocity', ...
		                      e_bc_vname,        'Electric Field',     ...
		                      v_bc_vname,        'ExB Drift Velocity', ...
		                      q_bc_vname,        'Quality'             ...
		                    }
		                  }, ...
		 'FILLVAL',       {  ...
		                    { tt2000_vname,      spdfcomputett2000([9999 12 31 23 59 59 999 999 999]), ...
		                      dtt2000_vname,     spdfcomputett2000([9999 12 31 23 59 59 999 999 999]), ...
		                      e_cf_vname,        single(-1.0E31),    ...
		                      v_cf_vname,        single(-1.0E31),    ...
		                      e_bc_vname,        single(-1.0E31),    ...
		                      v_bc_vname,        single(-1.0E31),    ...
		                      q_bc_vname,        uint8(255)          ...
		                    } ...
		                  }, ...
		 'FORMAT',        {  ...
		                    { tt2000_vname,      'I16',   ...
		                      dtt2000_vname,     'I16',   ...
		                      e_cf_vname,        'F14.6', ...
		                      v_cf_vname,        'F14.6', ...
		                      e_bc_vname,        'F14.6', ...
		                      v_bc_vname,        'F14.6', ...
		                      q_bc_vname,        'I1',    ...
		                      e_labl_vname,      'A2',    ...
		                      v_labl_vname,      'A2'     ...
		                    } ...
		                  }, ...
		 'LABLAXIS',      {  ...
		                    { tt2000_vname,      'UT',      ...
		                      q_bc_vname,        'Quality'  ...
		                    } ...
		                  }, ...
		 'LABL_PTR_1',    {  ...
		                    { e_cf_vname,     e_labl_vname,     ...
		                      v_cf_vname,     v_labl_vname,     ...
		                      e_bc_vname,     e_labl_vname,     ...
		                      v_bc_vname,     v_labl_vname      ...
		                    } ...
		                  }, ...
		 'SI_CONVERSION', {  ...
		                  { tt2000_vname,   '1e-9>s',   ...
		                    dtt2000_vname,  '1e-9>s',   ...
		                    e_cf_vname,     '1e-3>V/m', ...
		                    v_cf_vname,     '1e3>m/s',  ...
		                    e_bc_vname,     '1e-3>V/m', ...
		                    v_bc_vname,     '1e3>m/s'   ...
		                  } ...
		               }, ...
		 'TIME_BASE',  {  ...
		                  { tt2000_vname,  'J2000' ...
		                  } ...
		               }, ...
		 'UNITS',      {  ...
		                  { tt2000_vname,   'ns',   ...
		                    dtt2000_vname,  'ns',   ...
		                    e_cf_vname,     'mV/m', ...
		                    v_cf_vname,     'km/s', ...
		                    e_bc_vname,     'mV/m', ...
		                    v_bc_vname,     'km/s'  ...
		                  } ...
		               }, ...
		 'VALIDMIN',   {  ...
		                  { tt2000_vname,      spdfcomputett2000([2015 3 1 0 0 0 0 0 0]), ...
		                    dtt2000_vname,     int64(0),          ...
		                    e_cf_vname,        single(-100000.0), ...
		                    v_cf_vname,        single(-100000.0), ...
		                    e_bc_vname,        single(-100000.0), ...
		                    v_bc_vname,        single(-100000.0), ...
		                    q_bc_vname,        uint8(0)           ...
		                  }
		               }, ...
		 'VALIDMAX',   {  ...
		                  { tt2000_vname,      spdfcomputett2000([2050 3 1 0 0 0 0 0 0]), ...
		                    dtt2000_vname,     int64(2e10),       ...
		                    e_cf_vname,        single(100000.0),  ...
		                    v_cf_vname,        single(100000.0),  ...
		                    e_bc_vname,        single(100000.0),  ...
		                    v_bc_vname,        single(100000.0),  ...
		                    q_bc_vname,        uint8(3)           ...
		                  }
		               }, ...
		 'VAR_TYPE',   {  ...
		                  { tt2000_vname,      'support_data', ...
		                    dtt2000_vname,     'support_data', ...
		                    e_cf_vname,        'data',         ...
		                    v_cf_vname,        'data',         ...
		                    e_bc_vname,        'data',         ...
		                    v_bc_vname,        'data',         ...
		                    q_bc_vname,        'support_data'  ...
		                  }
		               } ...
		);

%------------------------------------------------------
% Write the File                                      |
%------------------------------------------------------
	spdfcdfwrite( edi_ql_file,                        ...
	              var_list,                           ...
	              'GlobalAttributes',   global_attrs, ...
	              'VariableAttributes', var_attrs,    ...
	              'VarDatatypes',       vardatatypes, ...
	              'RecordBound',        recbound      ...
	            );
end